<launch>
    <arg name="configuration" default="exoskeleton" doc="Configuration on launching the 'simulation' or 'exoskeleton'."/>
    <arg name="headless" default="false" doc="Launches no GUI when true."/>
    <arg name="hardware_interface" default="true" doc="Launches the hardware interface when config is 'exoskeleton."/>

    <arg name="rviz" default="false" doc="Launches RViz."/>
    <arg name="state_machine_viewer" default="false" doc="Launches the SMACH viewer."/>
    <arg name="rqt_input" default="true" doc="Launches the march rqt input device."/>
    <arg name="gazebo_ui" default="false" doc="Launches the Gazebo UI."/>

    <arg name="ground_gait" default="false" doc="Exoskeleton will ground gait in gazebo_ui if true."/>
    <arg name="obstacle" default="none" doc="Obstacle to load in the simulation."/>
    <arg name="unpause" default="true" doc="Unpause simulation when controller starts."/>
    <arg name="fixed" default="true" doc="Fixes the exoskeleton in the world in rviz"/>

    <arg name="input-device" default="false" doc="Launches ros serial node to connect with input device."/>
    <arg name="wireless" default="false" doc="Enables wireless connection to the input device."/>

    <arg name="gait_directory" default="training-v" doc="Gait files directory to use"/>

    <arg name="rosbag" default="true" doc="Enables rosbag record node."/>
    <arg name="bag_prefix" default="log" doc="Prefix of the bag file. Only used if rosbag is true."/>

    <node
            if="$(arg rosbag)"
            pkg="rosbag"
            name="record"
            type="record"
            output="log"
            args="-a -q -o $(arg bag_prefix)"
    />

    <node name="rviz" pkg="rviz" type="rviz" if="$(eval not headless and rviz)"/>

    <group ns="march">
        <include file="$(find march_state_machine)/launch/state_machine.launch">
            <arg name="state_machine_viewer" value="$(eval not headless and state_machine_viewer)"/>
            <arg name="unpause" value="$(eval configuration == 'simulation' and unpause)"/>
        </include>

        <include file="$(find march_safety)/launch/march_safety.launch"/>

        <node name="sound_play" pkg="sound_play" type="soundplay_node.py"/>

        <include file="$(find march_gait_selection)/launch/march_gait_selection.launch">
            <arg name="gait_directory" value="$(arg gait_directory)"/>
        </include>

        <node name="gait_scheduler_node" pkg="march_gait_scheduler" type="march_gait_scheduler_node" output="screen" required="true"/>

        <include file="$(find march_rqt_input_device)/launch/march_rqt_input_device.launch" if="$(eval not headless and rqt_input)">
            <arg name="ping_safety_node" value="true"/>
        </include>
    </group>

    <group if="$(eval configuration == 'exoskeleton')">
        <include file="$(find march_hardware_interface)/launch/hardware.launch" if="$(arg hardware_interface)">
            <arg name="robot" value="march4"/>
        </include>
    </group>

    <group if="$(eval configuration == 'simulation')">
        <include file="$(find march_simulation)/launch/march_world.launch">
            <arg name="gazebo_ui" value="$(eval not headless and gazebo_ui)"/>
            <arg name="fixed" value="$(arg fixed)"/>
            <arg name="ground_gait" value="$(arg ground_gait)"/>
            <arg name="obstacle" value="$(arg obstacle)"/>
        </include>
    </group>

    <include file="$(find march_launch)/launch/serial_connection.launch" if="$(arg input-device)">
        <arg name="wireless" value="$(arg wireless)"/>
    </include>
</launch>
